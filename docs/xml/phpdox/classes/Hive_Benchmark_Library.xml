<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Hive\Benchmark\Library" namespace="Hive\Benchmark" name="Library" abstract="false" final="false" start="16" end="263">
  <file path="/usr/local/zend/var/apps/http/vendor.dev/vendor/hive/benchmark/build/../source" file="Library.php" realpath="/usr/local/zend/var/apps/http/vendor.dev/vendor/hive/benchmark/source/Library.php" size="7499" time="2019-04-15T15:38:35+11:00" unixtime="1555303115" sha1="d1f4173e2c132e1733191a6053c8b2f5ebdae9a3" relative="Library.php"/>
  <docblock>
    <description compact="Benchmark Library.">The actual benchmark library, which does the core operations.</description>
    <author value="Jamie Peake &lt;jamie.peake@gmail.com&gt;"/>
    <licence value="https://github.com/hive/benchmark/blob/master/LICENSE (BSD-3-Clause)"/>
    <package value="Hive"/>
    <subpackage value="Benchmark"/>
    <copyright value="(c) 2016 Jamie Peake"/>
  </docblock>
  <implements full="Hive\Benchmark\Contract\Library" namespace="Hive\Benchmark\Contract" name="Library"/>
  <member name="config" default="" type="array" visibility="private" static="false" line="28">
    <docblock>
      <description compact="Default configuration settings.">config['memory'] array Whether or not to benchmark memory usage, uses memory_get_usage()</description>
      <var description="['enabled'] : boolean : Whether or not the benchmark is enabled, set to false if you wish to disabled on production" type="array"/>
      <var description="['memory'] : boolean : Whether or not to benchmark memory usage, uses memory_get_usage()" type="array"/>
      <var description="['decimals'] : integer : The number of decimals to benchmark against" type="array"/>
    </docblock>
  </member>
  <member name="marks" default="" type="array" visibility="protected" static="false" line="39">
    <docblock>
      <description compact="Internal storage for benchmarks."/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="49" end="53" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Library constructor."/>
      <param type="array" variable="$config"/>
      <throws type="object">
        <type full="Hive\Benchmark\Exception\RequiresMemoryGetUsage" namespace="Hive\Benchmark\Exception" name="RequiresMemoryGetUsage"/>
      </throws>
    </docblock>
    <parameter name="config" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Merge the received config with the defaults." line="51"/>
    </inline>
  </constructor>
  <method name="start" start="63" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Start a benchmark."/>
      <param description="benchmark name" variable="$name" type="string"/>
      <return type="object">
        <type full="Hive\Benchmark\void" namespace="Hive\Benchmark" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="create the parent holder" line="65"/>
      <comment value="initialise the variable" line="71"/>
      <comment value="get the benchmarks" line="74"/>
      <comment value="Add the item to the top of its array" line="78"/>
    </inline>
  </method>
  <method name="stop" start="92" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Stop a benchmark."/>
      <param description="benchmark name" variable="$name" type="string"/>
      <throws type="object">
        <type full="\Hive\Benchmark\Exception\StoppedRunning" namespace="\Hive\Benchmark\Exception" name="StoppedRunning"/>
      </throws>
      <throws type="object">
        <type full="\Hive\Benchmark\Exception\NotRunning" namespace="\Hive\Benchmark\Exception" name="NotRunning"/>
      </throws>
      <return type="object">
        <type full="Hive\Benchmark\void" namespace="Hive\Benchmark" name="void"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Gigo : The benchmark we are attempting to stop has been started" line="94"/>
    </inline>
  </method>
  <method name="timer" start="125" end="132" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Sets the current time into supplied variable."/>
      <param variable="$variable"/>
    </docblock>
    <parameter name="variable" byreference="true" type="{unknown}"/>
    <inline>
      <comment value="If the time benchmark is enabled" line="127"/>
    </inline>
  </method>
  <method name="memory" start="142" end="149" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Sets the current memory usage into supplied variable.">It is worth noting that, with garbage collection, it is possible for the
memory_get_usage to be LOWER then the first call.</description>
      <param variable="$variable"/>
    </docblock>
    <parameter name="variable" byreference="true" type="{unknown}"/>
    <inline>
      <comment value="If the memory benchmark is enabled" line="144"/>
    </inline>
  </method>
  <method name="details" start="163" end="178" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a benchmark."/>
      <param description="the name of the benchmark to get" variable="$name" type="string"/>
      <throws type="object">
        <type full="\Hive\Benchmark\Exception" namespace="\Hive\Benchmark" name="Exception"/>
      </throws>
      <throws type="object">
        <type full="\Hive\Benchmark\Exception\StoppedRunning" namespace="\Hive\Benchmark\Exception" name="StoppedRunning"/>
      </throws>
      <throws type="object">
        <type full="\Hive\Benchmark\Exception\NotRunning" namespace="\Hive\Benchmark\Exception" name="NotRunning"/>
      </throws>
      <return description="Either an array of requested marks or false on fail" type="object">
        <type full="Hive\Benchmark\array|bool" namespace="Hive\Benchmark" name="array|bool"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Smoke : test that the benchmark exists" line="166"/>
    </inline>
  </method>
  <method name="retrieve" start="193" end="262" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Retrieve an all benchmarks of a particular name from the internal marks storage array.">Will access the internal marks storage array, tally the result
and return the requested benchmark by name. Internal process, no gigo/sanity</description>
      <param variable="$name"/>
      <throws type="object">
        <type full="\Hive\Benchmark\Exception" namespace="\Hive\Benchmark" name="Exception"/>
      </throws>
      <return type="array"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Init : Our results" line="196"/>
      <comment value="Return the results, don't forget this was set to an empty array at the top." line="260"/>
    </inline>
  </method>
  <interface full="Hive\Benchmark\Contract\Library" namespace="Hive\Benchmark\Contract" name="Library">
    <method name="start" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Starts a benchmark of give name."/>
        <param description="the benchmark to start." type="string" variable="$name"/>
        <return type="object">
          <type full="Hive\Benchmark\Contract\void" namespace="Hive\Benchmark\Contract" name="void"/>
        </return>
      </docblock>
      <parameter name="name" byreference="false" type="{unknown}"/>
    </method>
    <method name="stop" start="34" end="34" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Stops a benchmark of given name."/>
        <param description="the benchmark to stop." type="string" variable="$name"/>
        <return type="object">
          <type full="Hive\Benchmark\Contract\void" namespace="Hive\Benchmark\Contract" name="void"/>
        </return>
      </docblock>
      <parameter name="name" byreference="false" type="{unknown}"/>
    </method>
    <method name="details" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get benchmark's details."/>
        <param description="the benchmark to get the details of." type="string" variable="$name"/>
        <return type="array"/>
      </docblock>
      <parameter name="name" byreference="false" type="{unknown}"/>
    </method>
  </interface>
  <extenders>
    <extender full="Hive\Benchmark\Object" namespace="Hive\Benchmark" name="Object"/>
  </extenders>
</class>
